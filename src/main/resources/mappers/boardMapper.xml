<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">	
	<!-- 01_01 게시글 전체목록 조회 및 검색 조회까지 -->
	<select id="listAll" resultType="com.p.project.DTO.BoardVO">
		<!-- select * from tbl_board -->
		SELECT bno, title, content, writer, regdate, viewcnt FROM tbl_board
		<!-- WHERE 절을 include 태그로 삽입 -->
		<!-- <include refid="search"></include> -->
		ORDER BY bno desc, regdate desc
	</select>
	
	<!-- 페이징 처리 -->
	<!-- <select id="listPage" resultType="BoardVO">
		<![CDATA[
		SELECT bno, title, content, writer, regdate, viewcnt FROM tbl_board
		WHERE bno > 0 order by bno desc, regdate desc
		limit #{page}, 10
		]]>
	</select> -->
	
	<!-- 파라미터 없이 criteria 객체로 페이징 처리 -->
	<select id="listCriteria" resultType="com.p.project.DTO.BoardVO">
		<![CDATA[
		select bno, title, content, writer, regdate, viewcnt from tbl_board
		where bno > 0 order by bno desc, regdate desc
		limit #{pageStart}, #{perPageNum}
		]]>
	</select>
	
	<!-- totalCount 실제 게시물로 페이징 처리 -->
	<select id="countPaging" resultType="int">
		<![CDATA[
		select count(bno) from tbl_board where bno > 0
		]]>
	</select>
	
	<!-- 검색처리 동적SQL. 실행 중 sql문이 완성되기에 확실히 동작하는지 실행해보고 동적인 부분을 처리한다-->
<!-- 	<select id="listSearch" resultType="BoardVO">
		<![CDATA[
		select * from tbl_board where bno > 0
		order by bno desc
		limit #{pageStart}, #{perPageNum}
		]]>
	</select>
	
	<select id="listSearchCount" resultType="int">
		<![CDATA[
		select count(bno) from tbl_board where bno > 0
		]]>
	</select> -->

	<!-- MyBatis의 <if>를 이용하여 검색 조건에 따른 동적 SQL문 작성 -->
<!-- 	<select id="listSearch" resultType="BoardVO">
	<![CDATA[
		select * from tbl_board where bno > 0
	]]>
	
	<if test="searchType != null">
		<if test="searchType=='t'.toString()">
			and title like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType=='c'.toString()">
			and content like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType=='w'.toString()">
			and writer like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType=='tc'.toString()">
			and (title like CONCAT('%', #{keyword}, '%') OR content like CONCAT('%',#{keyword},'%'))
		</if>
		<if test="searchType=='cw'.toString()">
			and (content like CONCAT('%', #{keyword}, '%') OR writer like CONCAT('%',#{keyword},'%'))
		</if>
		<if test="searchType=='tcw'.toString()">
			and (title like CONCAT('%', #{keyword}, '%') OR content like CONCAT('%',#{keyword},'%')
			OR writer like CONCAT('%',#{keyword},'%'))
		</if>	
	</if>
	
	<![CDATA[
		order by bno desc limit #{pageStart}, #{perPageNum}
	]]>
	</select>
 -->
	<!-- <sql>태그로 동일한 sql구문 재사용. <sql> 이용해 sql을 조각낼 때는 반드시 id속성을 이용해 적당한 이름을 가지도록 한다 -->
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType=='t'.toString()">
			and title like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType=='c'.toString()">
				and content like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType=='w'.toString()">
				and writer like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType=='tc'.toString()">
				and (title like CONCAT('%', #{keyword}, '%') OR content like CONCAT('%',#{keyword},'%'))
			</if>
			<if test="searchType=='cw'.toString()">
				and (content like CONCAT('%', #{keyword}, '%') OR writer like CONCAT('%',#{keyword},'%'))
			</if>
			<if test="searchType=='tcw'.toString()">
				and (title like CONCAT('%', #{keyword}, '%') OR content like CONCAT('%',#{keyword},'%')
				OR writer like CONCAT('%',#{keyword},'%'))
			</if>
		</if>
	</sql>

	<!-- <sql>조각은 필요한 SQL구성에 아래와 같이 재사용할 수 있다 -->
	<select id="listSearch" resultType="BoardVO">
		<![CDATA[
			select * from tbl_board where bno > 0
		]]>
		
		<include refid="search"></include>
		
		<![CDATA[
			order by bno desc limit #{pageStart}, #{perPageNum}
		]]>
	</select>
		
	<select id="listSearchCount" resultType="int">	
		<![CDATA[
			select count(bno) from tbl_board where bno > 0
		]]>
		<include refid="search"></include>
	</select>
	
	<!-- 01_02 게시글 레코드 개수 -->
	<select id="countArticle" resultType="int">
		SELECT COUNT(*) FROM tbl_board
		<!-- WHERE 절을 include 태그로 삽입 -->
		<include refid="search"></include>
	</select>
	
	<!-- sql code 조각 -->
	<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘 수 있다 -->
<!-- 	<sql id="search">
		<choose>
			검색옵션이 전체 검색일 경우
			<when test="searchOption=='all'">
				WHERE writer like '%'||#{keyword}||'%'
				OR content like '%'||#{keyword}||'%'
				OR title like '%||'#{keyword}||'%'
			</when>
			전체 검색이 아닐 경우
			<otherwise>
				WHERE ${searchOption} like '%'#{keyword}'%'
			</otherwise>
		</choose>
	</sql> -->
	
	<!-- 02 게시글 작성 -->
	<!-- nvl(A,B):A가 null이면 B, null이 아니면 A 오라클 nvl(칼럼명, 0) mysql ifnull(칼럼명, 0)
		게시글 조회수 증가처리 쿼리 - 조회수(초기값=0)=조회수+1 -->
	<insert id="insert" parameterType="com.p.project.DTO.BoardVO">
		INSERT INTO tbl_board(bno, title, content, writer) VALUES (
		(SELECT IFNULL(MAX(bno)+1, 1) FROM tbl_board a),
		#{title}, #{content}, #{writer}
		)
	</insert>
	
	<!-- 03 게시글 상세보기 조회 -->
	<select id="view" resultType="com.p.project.DTO.BoardVO">
		SELECT * FROM tbl_board WHERE bno=#{bno}
	</select>
	
	<!-- 04 게시글 조회수 증가처리 -->
	<update id="increaseViewcnt">
		UPDATE tbl_board SET viewcnt=viewcnt+1
		WHERE bno=#{bno}
	</update>
	
	<!-- 05 게시글 수정처리 -->
	<update id="updateArticle">
		UPDATE tbl_board SET title=#{title}, content=#{content}, writer=#{writer}
		WHERE bno=#{bno}
	</update>
	
	<!-- 06 게시글 삭제처리 -->
	<delete id="deleteArticle">
		DELETE FROM tbl_board
		WHERE bno=#{bno}
	</delete>
</mapper>