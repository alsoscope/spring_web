<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">
	<!-- DB에서 오는 컬럼명과 java에서 처리하는 변수명 일치를 위해 alias 처리 -->
	<!-- 01. 상품 전체 목록 -->
	<select id="listProduct" resultType="com.p.project.DTO.ProductDTO">
		SELECT * FROM tbl_product ORDER BY product_id asc
		
		<!-- SELECT product_id AS productId, product_name AS productName, product_price AS producrPrice, 
		product_desc AS productDesc, product_url AS productUrl
		FROM tbl_product ORDER BY product_name -->
	</select>
	
	<!-- ********//////무한 스크롤 테스트//////******** -->
	<select id="listTest" resultType="com.p.project.DTO.ProductDTO">
		SELECT * FROM tbl_product where product_id > 0 ORDER BY product_id asc limit 0, 10;
	</select>
	
	<!-- 게시물 조회(무한 스크롤 다운) 마지막 product_id가 integer타입으로 넘어오는 상태. controller에서 product_id-1에 해당하는 것을 dao로 넘겨줄 것 -->
	<select id="infiniteScrollDown" resultType="com.p.project.DTO.ProductDTO">
		<![CDATA[
		select * from tbl_product where product_id <= #{product_id} and product_id > #{product_id}-10
		order by product_id asc
		]]>
	</select>
	
	<!-- 마지막 product_id를 넘겨서 offset을 다르게 주어도 되지만 이론상 가장 첫 번째의 product_id를 받아와서 그것보다 먼저의 게시물 10개를 받아오는 것이 자연스럽기에 그렇게 구현함 -->
	<select id="infiniteScrollUp" resultType="com.p.project.DTO.ProductDTO">
		<![CDATA[
		select * from tbl_product where product_id >= #{product_id} and product_id < #{product_id}+10
		order by product_id asc
		]]>
	</select>
	<!-- ********//////무한 스크롤 테스트//////******** -->
	
	<!-- 02. 상품 상세 보기 -->
	<select id="detailProduct" resultType="com.p.project.DTO.ProductDTO">
		SELECT product_id, product_name, product_price, 
		product_desc
		FROM tbl_product WHERE product_id=#{productId}
		
		<!-- SELECT product_id AS productId, product_name AS productName, product_price AS producrPrice, 
		product_desc AS productDesc, product_url AS productUrl
		FROM tbl_product WHERE product_id=#{productId} -->
	</select>
	
	<!-- 03. 상품 추가하기 -->
	<insert id="insertProduct">
		insert into tbl_product (product_name, product_price, product_desc)
		values ( #{product_name},#{product_price},#{product_desc} )
		<!-- values ( #{product_name},#{product_price},#{product_desc},#{product_url} ) -->
	</insert>
	
	<!-- 04. 상품 수정/편집 -->
	<update id="updateProduct">
		update tbl_product set product_name=#{product_name}, product_price=#{product_price}, 
		product_desc=#{product_desc}
		where product_id=#{product_id}
	</update>
	
	<!-- 05. 상품 레코드 삭제 처리 -->
	<delete id="deleteProduct">
		delete from tbl_product
		where product_id=#{product_id}
	</delete>
	
	<!-- 06. 삭제를 위한 상품 이미지 파일 이름 select -->
	<!-- <select id="fileInfo" resultType="String">
		select product_url from tbl_product
		where product_id=#{product_id}
	</select> -->
	
	<!-- 페이징 처리 -->
	<select id="listCriteria" resultType="com.p.project.DTO.ProductDTO">
		<![CDATA[
			select * from tbl_product where product_id > 0
			order by product_id desc limit #{pageStart}, #{perPageNum}
		]]>
	</select>
	
	<select id="countPaging" resultType="int">
	<![CDATA[
		select count(product_id) from tbl_product where product_id > 0
	]]>
	</select>
	
	<!-- infinite scroll -->
	
</mapper>